/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as NotesRouteImport } from './routes/notes'
import { Route as IndexRouteImport } from './routes/index'
import { Route as NotesIdRouteImport } from './routes/notes_.$id'

const NotesRoute = NotesRouteImport.update({
  id: '/notes',
  path: '/notes',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const NotesIdRoute = NotesIdRouteImport.update({
  id: '/notes_/$id',
  path: '/notes/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/notes': typeof NotesRoute
  '/notes/$id': typeof NotesIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/notes': typeof NotesRoute
  '/notes/$id': typeof NotesIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/notes': typeof NotesRoute
  '/notes_/$id': typeof NotesIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/notes' | '/notes/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/notes' | '/notes/$id'
  id: '__root__' | '/' | '/notes' | '/notes_/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  NotesRoute: typeof NotesRoute
  NotesIdRoute: typeof NotesIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/notes': {
      id: '/notes'
      path: '/notes'
      fullPath: '/notes'
      preLoaderRoute: typeof NotesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/notes_/$id': {
      id: '/notes_/$id'
      path: '/notes/$id'
      fullPath: '/notes/$id'
      preLoaderRoute: typeof NotesIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  NotesRoute: NotesRoute,
  NotesIdRoute: NotesIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
